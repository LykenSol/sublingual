{
    "Item::Struct": 7041,
    "Stmt::Local": 6857,
    "Item::Impl": 6540,
    "ItemFn: has `inputs`": 6500,
    "File: has `attrs`": 6306,
    "ExprCall: has `args`": 5479,
    "ItemFn: has `output`": 5132,
    "ItemFn: has `vis`": 4794,
    "Item::Trait": 3884,
    "Item::Use": 3765,
    "ItemFn: has `generics`": 3302,
    "ItemFn: has `attrs`": 3027,
    "Lit::Int": 2715,
    "Expr::MethodCall": 2555,
    "Item::Macro": 1996,
    "Item::Mod": 1824,
    "ExprPath: has `segments.iter().skip(1).collect::<Vec<_>>()`": 1687,
    "Item::Const": 1678,
    "Item::ExternCrate": 1610,
    "Expr::Match": 1494,
    "Item::Enum": 1441,
    "ExprPath: has `&segments[0].arguments`": 1405,
    "Expr::Binary": 1120,
    "Item::Static": 952,
    "Expr::Assign": 878,
    "Item::Type": 797,
    "Expr::Unsafe": 617,
    "ItemFn: has `unsafety`": 596,
    "Expr::If": 568,
    "Stmt::Item": 534,
    "Expr::Unary": 531,
    "ItemFn: has `abi`": 516,
    "Expr::Block": 475,
    "Expr::Cast": 449,
    "ItemFn: has `constness`": 438,
    "Expr::Tuple": 425,
    "Item::ForeignMod": 422,
    "Expr::Reference": 373,
    "Expr::ForLoop": 370,
    "Expr::Field": 357,
    "Expr::Loop": 350,
    "ItemFn: has `asyncness`": 341,
    "ExprMacro with non-Expr inputs": 276,
    "Expr::Struct": 272,
    "Item::Union": 248,
    "Expr::Index": 221,
    "Expr::While": 211,
    "Expr::Return": 205,
    "Expr::Closure": 185,
    "Expr::Paren": 184,
    "Expr::AssignOp": 170,
    "Lit::Bool": 170,
    "ExprPath: has `qself`": 155,
    "Expr::Range": 119,
    "Expr::Await": 99,
    "Expr::Repeat": 98,
    "Item::Macro2": 92,
    "Item::TraitAlias": 87,
    "Lit::Float": 67,
    "Expr::Array": 66,
    "ExprPath: has `leading_colon`": 55,
    "ExprMacro: has `segments.iter().skip(1).collect::<Vec<_>>()`": 52,
    "Lit::Char": 44,
    "ItemFn: has `variadic`": 37,
    "Expr::Async": 32,
    "Expr::Try": 31,
    "Item::Verbatim": 31,
    "Expr::Verbatim": 23,
    "Expr::Box": 19,
    "Lit::ByteStr": 17,
    "Expr::Type": 15,
    "ExprCall: has `attrs`": 9,
    "ExprLit: has `attrs`": 9,
    "ExprMacro: has `attrs`": 9,
    "ExprMacro: has `leading_colon`": 9,
    "Expr::Break": 6,
    "Expr::Yield": 6,
    "unsupported macro `panic!` (with arguments `[])": 4,
    "Expr::Let": 2,
    "Lit::Byte": 2,
    "LitStr: has `lit.suffix()`": 2,
    "unsupported macro `format!` (with argume…`[LStr(\"{:?}\"), EPath { name: \"None\" }])": 2,
    "unsupported macro `panic!` (with arguments `[LStr(\"test\")])": 2,
    "unsupported macro `unreachable!` (with arguments `[])": 2,
    "EPath { name: \"None\" }": 1,
    "EPath { name: \"bar\" }": 1,
    "EPath { name: \"this_does_nothing_what_the\" }": 1,
    "Expr::Continue": 1,
    "ExprPath: has `attrs`": 1,
    "LStr(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx…xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")": 1,
    "function not found \"super\"": 1,
    "unsupported macro `assert!` (with arguments `[LStr(\"foo\")])": 1,
    "unsupported macro `compile_error!` (with arguments `[LStr(\"kaboom\")])": 1,
    "unsupported macro `compile_error!` (with…tr(\"a very descriptive error message\")])": 1,
    "unsupported macro `concat!` (with argume… `[EMacCall { name: \"test\", args: [] }])": 1,
    "unsupported macro `concat_idents!` (with…ath { name: \"a\" }, EPath { name: \"b\" }])": 1,
    "unsupported macro `env!` (with arguments `[LStr(\"EXISTING_ENV\")])": 1,
    "unsupported macro `env!` (with arguments `[LStr(\"__HOPEFULLY_NOT_DEFINED__\")])": 1,
    "unsupported macro `env!` (with arguments `[])": 1,
    "unsupported macro `env!` (with arguments…Str(\"one\"), LStr(\"two\"), LStr(\"three\")])": 1,
    "unsupported macro `env!` (with arguments…_DEFINED__\"), LStr(\"my error message\")])": 1,
    "unsupported macro `format!` (with arguments `[LStr(\"{:X}\"), LStr(\"3\")])": 1,
    "unsupported macro `format!` (with argume…`[LStr(\"{:notimplemented}\"), LStr(\"3\")])": 1,
    "unsupported macro `format_args_nl!` (with arguments `[LStr(\"\")])": 1,
    "unsupported macro `iamnotanextensionthatexists!` (with arguments `[LStr(\"\")])": 1,
    "unsupported macro `include!` (with argum… `[EMacCall { name: \"line\", args: [] }])": 1,
    "unsupported macro `include!` (with argum…[LStr(\"include-single-expr-helper.rs\")])": 1,
    "unsupported macro `inline!` (with arguments `[])": 1,
    "unsupported macro `log_syntax!` (with arguments `[])": 1,
    "unsupported macro `option_env!` (with arguments `[LStr(\"one\"), LStr(\"two\")])": 1,
    "unsupported macro `option_env!` (with arguments `[])": 1,
    "unsupported macro `panic!` (with arguments `[LStr(\"moop\")])": 1,
    "unsupported macro `panic!` (with arguments `[LStr(\"test-fail-owned\")])": 1,
    "unsupported macro `panic!` (with arguments `[LStr(\"test-fail-static\")])": 1,
    "unsupported macro `print!` (with argumen…`[EMacCall { name: \"testo\", args: [] }])": 1,
    "unsupported macro `println!` (with arguments `[LStr(\"{}\"), EPath { name: \"x\" }])": 1,
    "unsupported macro `println!` (with argum…`[LStr(\"{}\"), EPath { name: \"foobar\" }])": 1,
    "unsupported macro `println!` (with argum…cCall { name: \"log_syntax\", args: [] }])": 1,
    "unsupported macro `printlx!` (with arguments `[LStr(\"oh noes!\")])": 1,
    "unsupported macro `unimplemented!` (with arguments `[])": 1,
    "unsupported macro `unreachable!` (with arguments `[LStr(\"uhoh\")])": 1,
}
